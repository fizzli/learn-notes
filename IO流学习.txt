前提知识：一个程序可以创建多个线程。
BIO(同步阻塞)、NIO(同步非阻塞)、AIO(异步[非阻塞])

同步与异步:是针对应用程序与内核的交互而言的。同步过程中进程触发IO操作并等待或者轮询的去查看IO操作是否完成。异步过程中进程触发IO操作以后，直接返回，做自己的事情，IO交给内核来处理，完成后内核通知进程IO完成。

阻塞与非阻塞:应用进程请求IO操作时，如果数据未准备好，如果请求立即返回就是非阻塞，不立即返回就是阻塞。

阻塞：线程不能做其他事情需要一直等待对应的程序完成。(停住不干活)
非阻塞：线程不等待事件完成，继续去做其他的事。（不停下来继续干活）
同步：线程发出请求并且需要等待或者自己去轮询。(结果需要自己去查看)
异步：线程发出请求后，立即返回。核心执行完以后告诉线程结果。（结果被别人告诉）

同步非阻塞：线程发出请求后，继续去做其他的事情，轮询IO是否完成。

NIO：基于事件驱动的思想来实现。使用多路复用器机制。

例如：
读操作:对本地而言，应用程序建立一个线程读取本地硬盘上的数据。
	  对网络而言，应用程序建立一个线程读取另一个主机传输过来的数据。

应用程序创建一个线程，读取数据并且在数据未读取完之前，线程一直等待不去做其他事情就叫做阻塞。
